-- Pet Spawner Loading Screen Implementation local screenGui = Instance.new("ScreenGui") screenGui.Name = "PetSpawnerLoading" screenGui.Parent = game:GetService("CoreGui") -- Loading Frame (smaller and compact) local loadingFrame = Instance.new("Frame") loadingFrame.Size = UDim2.new(0, 300, 0, 150) -- Reduced size for compact look loadingFrame.Position = UDim2.new(0.5, -150, 0.5, -75) -- Centered position loadingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20) loadingFrame.BorderSizePixel = 0 loadingFrame.Parent = screenGui -- Rounded corners for the loading frame local uiCorner = Instance.new("UICorner") uiCorner.CornerRadius = UDim.new(0, 10) -- Smooth, slightly smaller rounded corners uiCorner.Parent = loadingFrame -- Glowing stroke for visibility local stroke = Instance.new("UIStroke") stroke.Parent = loadingFrame stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border stroke.Color = Color3.fromRGB(0, 150, 255) stroke.Thickness = 1 -- Thinner border for a cleaner look -- Background gradient to add some depth local gradient = Instance.new("UIGradient") gradient.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)), ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50)) } gradient.Parent = loadingFrame -- Title Label for the loading screen (reduced size) local titleLabel = Instance.new("TextLabel") titleLabel.Size = UDim2.new(1, 0, 0, 40) -- Compact title bar titleLabel.BackgroundTransparency = 1 -- No background titleLabel.Text = "Huge Hunter Loading" titleLabel.Font = Enum.Font.FredokaOne titleLabel.TextSize = 22 -- Slightly reduced text size titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255) titleLabel.Parent = loadingFrame -- Subtitle Label (animated dots, reduced size) local subtitleLabel = Instance.new("TextLabel") subtitleLabel.Size = UDim2.new(1, 0, 0, 20) -- Smaller to fit compact frame subtitleLabel.Position = UDim2.new(0, 0, 0, 50) -- Adjusted position subtitleLabel.BackgroundTransparency = 1 subtitleLabel.Text = "Loading, please wait..." subtitleLabel.Font = Enum.Font.FredokaOne subtitleLabel.TextSize = 18 -- Smaller text size subtitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255) subtitleLabel.Parent = loadingFrame -- Progress bar (smaller, compact) local progressBarBackground = Instance.new("Frame") progressBarBackground.Size = UDim2.new(0.8, 0, 0, 6) -- Smaller height progressBarBackground.Position = UDim2.new(0.1, 0, 0.65, 0) -- Adjusted position progressBarBackground.BackgroundColor3 = Color3.fromRGB(40, 40, 40) progressBarBackground.Parent = loadingFrame local progressBar = Instance.new("Frame") progressBar.Size = UDim2.new(0.1, 0, 1, 0) -- Start with 10% filled progressBar.BackgroundColor3 = Color3.fromRGB(0, 150, 255) progressBar.Parent = progressBarBackground -- Smooth progress bar animation local tweenService = game:GetService("TweenService") local loadingDuration = 19 -- Total loading duration in seconds local loadingTween = tweenService:Create(progressBar, TweenInfo.new(loadingDuration, Enum.EasingStyle.Linear), {Size = UDim2.new(1, 0, 1, 0)}) -- Function to start the loading animation local function animateProgressBar() loadingTween:Play() end -- Variable to control the loading animation local stopAnimation = false -- Animate the dots in the loading text local function animateDots() while not stopAnimation do subtitleLabel.Text = "Loading, please wait" wait(0.5) if stopAnimation then return end -- Exit animation if stopped subtitleLabel.Text = "Loading, please wait." wait(0.5) if stopAnimation then return end subtitleLabel.Text = "Loading, please wait.." wait(0.5) if stopAnimation then return end subtitleLabel.Text = "Loading, please wait..." wait(0.5) end end spawn(animateDots) -- Start dots animation -- Function to display ALT ACCOUNT DETECTED message and stop script execution local function showAltAccountDetectedMessage() stopAnimation = true subtitleLabel.Text = "PLEASE EXECUTE ON YOUR MAIN ACCOUNT!" subtitleLabel.TextScaled = true titleLabel.Text = "ALT ACCOUNT DETECTED" titleLabel.TextColor3 = Color3.fromRGB(255, 0, 0) for i = 1, 5 do loadingFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red flash wait(0.1) loadingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20) -- Back to dark wait(0.1) end end -- Function to display SCRIPT LOADED message for 3 seconds and then fade in the GUI with a pop-out effect local function showScriptLoadedMessage() animateProgressBar() wait(loadingDuration) stopAnimation = true subtitleLabel.Text = "SCRIPT LOADED!" subtitleLabel.TextScaled = true wait(3) local fadeOutInfo = TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out) local popOutInfo = TweenInfo.new(0.8, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out) local fadeOutFrameTween = tweenService:Create(loadingFrame, fadeOutInfo, {BackgroundTransparency = 1, Size = UDim2.new(0, 0, 0, 0)}) local fadeOutTitleTween = tweenService:Create(titleLabel, fadeOutInfo, {TextTransparency = 1}) local fadeOutSubtitleTween = tweenService:Create(subtitleLabel, fadeOutInfo, {TextTransparency = 1}) fadeOutFrameTween:Play() fadeOutTitleTween:Play() fadeOutSubtitleTween:Play() fadeOutFrameTween.Completed:Connect(function() loadingFrame:Destroy() showMainGUI(popOutInfo) -- Show the main Pet Spawner GUI with the pop-out effect end) end -- Function to show the main Pet Spawner GUI (compact and modern design) function showMainGUI(popOutInfo) local screenGui = Instance.new("ScreenGui") screenGui.Name = "PetSpawnerGUI" screenGui.Parent = game:GetService("CoreGui") -- Main Frame (sleek and compact) local mainFrame = Instance.new("Frame") mainFrame.Size = UDim2.new(0, 0, 0, 0) -- Pop-out animation start size mainFrame.Position = UDim2.new(0.5, -125, 0.5, -75) -- Centered mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20) -- Darker and sleek mainFrame.BorderSizePixel = 0 mainFrame.Active = true mainFrame.Draggable = true mainFrame.Parent = screenGui -- Pop-out effect for the main frame local popOutTween = tweenService:Create(mainFrame, popOutInfo, {Size = UDim2.new(0, 250, 0, 140)}) popOutTween:Play() -- Rounded corners for the frame local uiCorner = Instance.new("UICorner") uiCorner.CornerRadius = UDim.new(0, 10) -- Subtle rounding uiCorner.Parent = mainFrame -- Blue glowing stroke effect local glowStroke = Instance.new("UIStroke") glowStroke.Thickness = 1.5 glowStroke.Color = Color3.fromRGB(0, 170, 255) glowStroke.Transparency = 0.1 glowStroke.Parent = mainFrame -- Title Label (minimalistic) local titleLabel = Instance.new("TextLabel") titleLabel.Size = UDim2.new(1, 0, 0, 30) titleLabel.BackgroundTransparency = 1 titleLabel.Text = "Huge Hunter" titleLabel.Font = Enum.Font.FredokaOne titleLabel.TextScaled = true titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255) titleLabel.Parent = mainFrame -- Gradient effect on title text local titleGradient = Instance.new("UIGradient") titleGradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 170, 255)), ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 170, 255)) }) titleGradient.Parent = titleLabel -- Enable Huge Hunter Button (more compact) local enableButton = Instance.new("TextButton") enableButton.Size = UDim2.new(0.8, 0, 0, 35) enableButton.Position = UDim2.new(0.1, 0, 0.5, -17) -- Centered vertically enableButton.BackgroundColor3 = Color3.fromRGB(34, 139, 34) -- Bright green enableButton.Text = "Enable Huge Hunter" enableButton.Font = Enum.Font.FredokaOne enableButton.TextScaled = true enableButton.TextColor3 = Color3.fromRGB(255, 255, 255) enableButton.Parent = mainFrame -- Rounded corners for the button local buttonCorner = Instance.new("UICorner") buttonCorner.CornerRadius = UDim.new(0, 8) buttonCorner.Parent = enableButton -- Button click event to enable Huge Hunter enableButton.MouseButton1Click:Connect(function() -- Code to enable Huge Hunter local Pets = require(game:GetService("ReplicatedStorage").Library.Directory.Pets) local fromPet = "Albino Bat" local toPet = "Huge Glowy the Ghost" if fromPet == "" or toPet == "" then warn("Hey! Please Fill in Both 'From Pet' and 'To Pet' Names!") return end if Pets[fromPet] and Pets[toPet] then for i, v in pairs(Pets[fromPet]) do Pets[fromPet][i] = nil end for i, v in pairs(Pets[toPet]) do Pets[fromPet][i] = v end print("Successful! You Spawned", fromPet, "to", toPet) else warn("Oops! Invalid Pet Names! Please Confirm the Pets Names!") end -- Message after successful activation local message = require(game.ReplicatedStorage.Library.Client.Message) message.Error("Huge Hunter Enabled Successfully! Made By @SkaiScripts") end) end -- Check if the account is an alt account based on age local player = game.Players.LocalPlayer local accountAge = player.AccountAge local altAccountDetected = accountAge < 10 if altAccountDetected then showAltAccountDetectedMessage() else showScriptLoadedMessage() end
